[project]
name = "redis-starter-python"
version = "0.1.0"
description = "A starter project for working with Redis and Python"
authors = [
  { name = "Will Johnston", email = "will.johnston@redis.com" }
]
maintainers = [
  { name = "Will Johnston", email = "will.johnston@redis.com" }
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
keywords = ["python", "fastapi", "redis", "starter", "redis-py"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Programming Language :: Python"
]
dependencies = [
    "fastapi[standard] (>=0.115.6,<0.116.0)",
    "python-dotenv>=1.0.1",
    "redis[hiredis]>=5.2.1",
]

[project.urls]
Repository = "https://github.com/redis-developer/redis-starter-python.git"
"Bug Tracker" = "https://github.com/redis-developer/redis-starter-python/issues"

[project.optional-dependencies]
dev = [
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv"]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

